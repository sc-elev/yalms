@model yalms.Models.TeacherScheduleViewModel
@{
    ViewBag.Title = "Scheman";
}

@{
    Layout = "~/Views/Shared/_LayoutTeacher.cshtml";
}

<style>
    .FirstCol {
        /*padding: 3px;*/
        float: left;
        display: inline-block;
        width: 200px;
        border: 1px solid red;
        height: 400px;
    }
    .SecondCol {
        /*padding: 3px;*/
        float: left;
        display: inline-block;
        width: 640px;
        border: 1px solid green;
        height: 800px;
    }
    .ThirdCol {
        /*padding: 3px;*/
        float: left;
        display: inline-block;
        width: 250px;
        border: 1px solid blue;
        height: 400px;
    }
    .DayColumn {
        /*padding: 1px;*/
        display: inline-block;
        width: 90px;
        border: 0px solid black;
        height: 400px;
    }
    .OuterBox {
        height: 50px;
        width: 90px;
        text-align: center;
        font-size: .8em;
        margin-bottom: 2px;
    }
    .CalSlot {
        color: #121212;
        text-shadow: 0 1px 0 #D8D8D8;
        font-weight: bold;
        background: linear-gradient(to bottom, #CFE7FA 0%,#6393C1 100%);
        /*background: linear-gradient(to bottom, #FEFCEA 0%,#F1DA36 100%);*/
        border: 1px solid #355C80;
        border-radius: 6px;
    }
    .TimeSlot {
        color: #000;
        text-shadow: 0 1px 0 #EEE;
        background: linear-gradient(to bottom, #DCDCDC 0%,#A0A0A0 100%);
        /*background: linear-gradient(to bottom, #CDEB8E 0%,#A5C956 100%);*/
        border: 1px solid #CCC;
        border-radius: 6px;
    }
    .Slot {
        color: #EEE;
        text-shadow: 0 1px 0 #000;
        background: linear-gradient(to bottom, #6C6F6F 0%,#3D3F3F 100%);
        border: 1px solid #2E2F2F;
        border-radius: 6px;
    }
    .EmptySlot {
        background: linear-gradient(to bottom, #FFFFFF 0%,#E5E5E5 100%);
        border: 1px solid #CCC;
        border-radius: 6px;
    }
    .SelectedSlotInformation {
        color: #121212;
        background-color: #FFF;
        border-bottom: 1px solid #DDD;
        width: 100%;
        display: inline-block;
        font-size: 13px;
        height: 25px;
        text-align: center;
        padding-bottom: 10px;
    }
    .DDLClass {
        width: 140px;
        font-size: 13px;
    }
    .LabelClass {
        width: 90px;
        font-size: 13px;
    }
</style>

<div class="row">

    <!-- Left column -->
    <div class="col-md-4 FirstCol">
        @if (Model.Courses != null && Model.Courses.Count > 0)
        {
            Html.Label("Välj kurs");
            Html.DropDownListFor(m => m.SelectedCourse, Model.CourseSelectionData);
        }
        else
        {
            Html.Label("Du har inga kurser.");
        }
    </div>


    <!-- Middle column -->
    <div class="col-md-4 SecondCol">

        <div style="text-align:center; font-size:1.5em">
                @Html.ActionLink("<< ", "PreviousWeek_Click", "Teacher")
                @if (DateTime.Now.Date != Model.Today)
                {
                    <!-- IMPLEMENT THIS! -->
                    @Html.ActionLink("Idag", "MainViewToday")
                }
                else
                {
                    <text>Idag</text>
                }
                @Html.ActionLink(" >>", "NextWeek_Click", "Teacher")
            </div>

        <!-- Vecka + klockslag -->
        <div class="DayColumn">
            <div class="OuterBox CalSlot">
                <br />
                Vecka @Model.Week
            </div>
            @for (var s = 1; s < Model.SlotTimings.Count; s++)
            {
                <div class="OuterBox TimeSlot">
                    @Model.SlotTimings[s].FormatFrom()
                    &ndash;
                    @Model.SlotTimings[s].FormatTo()
                </div>
            }
        </div>

        <!-- Skoldagar under veckan -->
        @for (var day = 0; day < 5; day++)
        {
            <div class="DayColumn">
                <div class="OuterBox CalSlot">
                    @Model.FirstDayOfWeek.AddDays(day).DayOfWeek
                    <br />
                    @Model.FirstDayOfWeek.AddDays(day).Month
                    /
                    @Model.FirstDayOfWeek.AddDays(day).Day
                </div>

                @for (var row = 1; row < Model.SlotTimings.Count; row++)
                {
                    var slot = Model.ThisWeekSlots[row, day];
                    <a href="@Model.ThisWeekUrls[row, day]">
                        @if (slot == null)
                        {
                            // slot is empty
                            <div class="OuterBox EmptySlot">&nbsp;</div>
                        }
                        else
                        {
                            <div class="OuterBox Slot">
                                @slot.Room.Name<br />
                                @slot.Course.Name
                            </div>
                        }
                    </a>
                }
            </div>
        }
    </div>


    <!-- Right column -->
    <div class="col-md-4 ThirdCol">
        <div class="SelectedSlotInformation">
            @ViewBag.SelectedSlotInformation
        </div>
        @using (Html.BeginForm("SlotForm", "Teacher", FormMethod.Post, new { pageviewmodel = Model }))
        {
            @Html.Label("Välj kurs", new { @class = "LabelClass" })
            @Html.DropDownListFor(m => m.FormSelectedCourse, Model.CourseSelectionData, new { @class = "DDLClass" })
            <br />
            @Html.Label("Välj sal", new { @class = "LabelClass" })
            @Html.DropDownListFor(m => m.FormSelectedRoom, Model.RoomSelectionData, new { @class = "DDLClass" })
            <br />
            <input type="submit" value="Spara markerad lektion" class="btn btn-default" style="width:150px" />
            <br />
            <input type="button" value="Ta bort markerad lektion" class="btn btn-default" style="width:150px" onclick="@Html.Action("DeleteSelectedSlot")" />
        }
    </div>
</div>
