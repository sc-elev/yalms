@model yalms.Models.TeacherScheduleViewModel
@{
    ViewBag.Title = "Scheman";
}

@{
    Layout = "~/Views/Shared/_LayoutTeacher.cshtml";
}

<style>
    .FirstCol {
        padding: 3px;
        float: left;
        display: inline-block;
        width: 200px;
        border: 1px solid red;
        height: 400px;
    }

    .SecondCol {
        padding: 3px;
        float: left;
        display: inline-block;
        width: 640px;
        border: 1px solid green;
        height: 800px;
    }

    .ThirdCol {
        /*padding: 3px;*/
        float: left;
        display: inline-block;
        width: 250px;
        border: 1px solid blue;
        height: 400px;
    }

    .DayColumn {
        padding: 1px;
        display: inline-block;
        width: 90px;
        border: 0px solid black;
        height: 400px;
    }

    .TimeSlot {
        margin: 2px;
        color: #DDDDDD;
        background: linear-gradient(to bottom, #cdeb8e 0%,#a5c956 100%);
        border: 1px solid #4cff00;
        border-radius: 6px;
        width: 90px;
        display: inline-block;
        font-size: 10px;
        height: 45px;
        text-align: center;
    }

    .Slot {
        margin: 2px;
        color: #DDDDDD;
        background: linear-gradient(to bottom, #cfe7fa 0%,#6393c1 100%);
        border: 1px solid #4c00ff;
        border-radius: 6px;
        width: 90px;
        display: inline-block;
        font-size: 10px;
        height: 45px;
        text-align: center;
    }

    .EmptySlot {
        margin: 2px;
        color: #DDDDDD;
        background: linear-gradient(to bottom, #ffffff 0%,#e5e5e5 100%);
        border: 1px solid #4c00ff;
        border-radius: 6px;
        width: 90px;
        display: inline-block;
        font-size: 10px;
        height: 45px;
        text-align: center;
    }

    .CalSlot {
        margin: 2px;
        color: #121212;
        background: linear-gradient(to bottom, #f7fbfc 0%,#d9edf2 40%,#add9e4 100%);
        border: 1px solid #DDDDDD;
        border-radius: 6px;
        width: 90px;
        display: inline-block;
        font-size: 10px;
        height: 45px;
        text-align: center;
    }

    .SelectedSlotInformation {
        color: #121212;
        background-color: #FFFFFF;
        border-bottom: 1px solid #DDDDDD;
        width: 100%;
        display: inline-block;
        font-size: 13px;
        height: 25px;
        text-align: center;
        padding-bottom: 10px;
    }

    .DDLClass {
        width: 140px;
        font-size: 13px;
    }

    .LabelClass {
        width: 90px;
        font-size: 13px;
    }
</style>

<div class="row">

    <!-- Left column -->
    <div class="col-md-4 FirstCol">
        @if (Model.Courses != null && Model.Courses.Count > 0)
        {
            Html.Label("Välj kurs");
            Html.DropDownListFor(m => m.SelectedCourse, Model.CourseSelectionData);
        }
        else
        {
            Html.Label("Du har inga kurser");
        }
    </div>


    <!-- Middle column -->
    <div class="col-md-4 SecondCol">

        <div style="width: 100%; display: inline-block; height: 25px; text-align: center; font-weight: bold; font-size: 13px">
            @Html.ActionLink("<< ", "PreviousWeek_Click", "Teacher")
            &nbsp; Vecka&nbsp;@(Model.Week)&nbsp;
            @Html.ActionLink(" >>", "NextWeek_Click", "Teacher")
        </div>


        <div class="DayColumn">
            <div class="CalSlot">
                <b>Vecka @Model.Week</b>
            </div>
            @for (var s = 1; s < Model.SlotTimings.Count; s++)
            {
                <div class="TimeSlot">
                    @Model.SlotTimings[s].FormatFrom()
                    -
                    @Model.SlotTimings[s].FormatTo()
                </div>
            }
        </div>

        @for (var day = 0; day < 5; day++)
        {
            <div class="DayColumn">
                <div class="CalSlot">
                    @Model.FirstDayOfWeek.AddDays(day).DayOfWeek
                    <br />
                    @Model.FirstDayOfWeek.AddDays(day).Month
                    /
                    @Model.FirstDayOfWeek.AddDays(day).Day
                </div>

                @for (var row = 1; row < Model.SlotTimings.Count; row++)
                {
                    var slot = Model.ThisWeekSlots[row, day];
                    <a href="@Model.ThisWeekUrls[row, day]">
                        @if (slot == null)
                        {
                            // slot is empty
                            <div class="EmptySlot">&nbsp;</div>
                        }
                        else
                        {
                            <div class="Slot">
                                @slot.Room.Name<br />
                                @slot.Course.Name
                            </div>
                        }
                    </a>
                }
            </div>
        }
    </div>


    <!-- Right column -->
    <div class="col-md-4 ThirdCol">
        <div class="SelectedSlotInformation">
            @ViewBag.SelectedSlotInformation
        </div>
        @using (Html.BeginForm("SlotForm", "Teacher", FormMethod.Post, new { pageviewmodel = Model }))
        {
            @Html.Label("Välj kurs", new { @class = "LabelClass" })
            @Html.DropDownListFor(m => m.FormSelectedCourse, Model.CourseSelectionData, new { @class = "DDLClass" })
            <br />
            @Html.Label("Välj sal", new { @class = "LabelClass" })
            @Html.DropDownListFor(m => m.FormSelectedRoom, Model.RoomSelectionData, new { @class = "DDLClass" })
            <br />
            <input type="submit" value="Spara markerad lektion i schemat" class="btn btn-default" />
            <br />
            <input type="button" value="Ta bort markerad lektion från schemat" class="btn btn-default" onclick="DeleteSelectedSlot()" />
            <br />
            @Html.ActionLink("Ta bort [***TA BORT DENNA LÄNK OM KNAPPEN OVAN FUNKAR***]", "DeleteSelectedSlot")
        }
    </div>
</div>
